openapi: 3.0.3
info:
  title: PackBuilder Actions
  version: "1.0.0"
servers:
  - url: https://your-domain.com
paths:
  /api/validate:
    post:
      operationId: validatePacks
      summary: Validate & normalize one or more resource-pack zips
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: One or more resource-pack .zip files
      responses:
        "200":
          description: Normalized manifest with issues
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateResponse"
  /api/create-preview:
    post:
      operationId: createPreview
      summary: Create a preview build (e.g., Vercel) and return a URL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branch:
                  type: string
                  example: main
                bundleId:
                  type: string
                  description: Optional id from validate step
      responses:
        "200":
          description: Preview build info
          content:
            application/json:
              schema:
                type: object
                properties:
                  previewUrl:
                    type: string
                  buildId:
                    type: string
components:
  schemas:
    ClassifiedAsset:
      type: object
      properties:
        path:
          type: string
          example: assets/minecraft/textures/gui/icons.png
        category:
          type: string
          enum: [HUD & GUI, Blocks, Items, Entities, Other]
        packNamespace:
          type: string
          example: minecraft
        size:
          type: integer
          description: Bytes
        features:
          type: array
          items:
            type: string
          description: Feature chips (e.g., "hotbar", "hearts")
    Manifest:
      type: object
      properties:
        packName:
          type: string
        packFormat:
          type: integer
        assets:
          type: array
          items:
            $ref: "#/components/schemas/ClassifiedAsset"
    Issue:
      type: object
      properties:
        type:
          type: string
          enum: [CONFLICT, UNSUPPORTED, WARNING]
        message:
          type: string
        paths:
          type: array
          items: { type: string }
    ValidateResponse:
      type: object
      properties:
        bundleId:
          type: string
        manifests:
          type: array
          items:
            $ref: "#/components/schemas/Manifest"
        issues:
          type: array
          items:
            $ref: "#/components/schemas/Issue"
        maxPackFormat:
          type: integer
